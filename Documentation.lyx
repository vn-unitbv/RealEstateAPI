#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
RealEstateAPI
\end_layout

\begin_layout Author
Balogh Szilárd, Vitályos Norbert, Opra-Bódi Botond
\end_layout

\begin_layout Part
Introduction
\end_layout

\begin_layout Standard
The following documentation contains a comprehensive description of our
 Web API project for the "Dezvoltarea Aplicațiilor Web și Mobile cu Angular,
 .Net si Android" course within the Faculty of Mathematics & Informatics,
 University of Transilvania.
 It aims to provide an overview of the project's goals, architecture, implementa
tion details, and instructions on how to use the project, while also discussing
 the difficulties that arose during the development process.
 In the following sections, we will explore each aspect of our project in
 detail, providing step-by-step instructions, code snippets, and any additional
 information necessary to understand and utilize the project effectively.
\end_layout

\begin_layout Section
Motivation
\end_layout

\begin_layout Standard
RealEstateAPI is a University Project.
 That's why it is not intended for any real-world use, outside the scope
 of the course.
 The goal of this project isn't to develop something new, but to learn more
 in depth about backend and API development, CRUD applications and working
 in a team.
 That's why one of our biggest priorities was to utilize technologies that
 facillitate the development process and let the developer team work together
 effectively.
 We used widely accepted coding practices that improve code quality and
 readability, while also paying special attention to efficiency, ease of
 use and intuitive design.
\end_layout

\begin_layout Section
Topic
\end_layout

\begin_layout Subsection
What is RealEstateAPI?
\end_layout

\begin_layout Standard
RealEstateAPI is a Web API that uses technologies like ASP.NET Core for backend
 development, Entity Framework Core for seamless integration and querying
 of the database, and Microsoft SQL Server for storing information in a
 database (More in Technologies Used section).
 RealEstateAPI is an Announcement-based API, meaning that, the central elements
 are constituted by Announcements.
 These are containers of information, offering details about users, uploaded
 Real Estates and comments.
 
\end_layout

\begin_layout Subsection
Brief Walkthrough of RealEstateAPI
\end_layout

\begin_layout Standard
RealEstateAPI can be accessed without authenticating, "Guests" (Anonymous
 users) being able to view the announcement feed, filter announcements,
 and view details about specific announcements.
 Other actions require authentication.
 Adding an announcement, for example, requires a user account to be created,
 so that the uploaders of the announcements can be identified.
 This can easily be done by our AccountController's Register and Login endpoints.
 
\end_layout

\begin_layout Standard
After logging in, the user receives a token, that is necessary for some
 operations, like adding or deleting announcements, sending comments, etc.
 (More in Security).
 It is important to note, that during the development of RealEstateAPI our
 first priority was security.
 That's why we used different technologies to make sure that all users can
 safely and securely enter their information, without ever worrying about
 it being stolen (More in Database Development and Technologies Used).
\end_layout

\begin_layout Standard
Users have a large variety of operations they can choose from.
 These include viewing the announcement feed, filtering announcements, adding
 and deleting announcements, sending comments (More in Endpoints).
 Moreover, we also included an Administrator Role, who is able to access,
 modify or delete announcements and comments, so that no inappropriate content
 is uploaded and persisted in the database (More in User Roles).
\end_layout

\end_body
\end_document
